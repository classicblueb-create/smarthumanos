rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function signedIn() { return request.auth != null; }
    function isSelf(uid) { return signedIn() && request.auth.uid == uid; }
    function roleOf(uid) { return get(/databases/$(database)/documents/userProfiles/$(uid)).data.role; }
    function isHR(uid) { return roleOf(uid) == 'hr'; }

    match /userProfiles/{uid} {
      allow read: if isSelf(uid) || isHR(request.auth.uid);
      allow write: if isSelf(uid);
    }

    match /attendance/{docId} {
      allow create: if signedIn();
      allow read, update, delete: if signedIn() && (resource.data.uid == request.auth.uid || isHR(request.auth.uid));
    }

    match /leaves/{leaveId} {
      allow create: if signedIn();
      allow read: if signedIn() && (resource.data.uid == request.auth.uid || isHR(request.auth.uid));
      allow update: if signedIn() && (
        (resource.data.uid == request.auth.uid && resource.data.status == 'pending') ||
        isHR(request.auth.uid)
      );
      allow delete: if signedIn() && resource.data.uid == request.auth.uid;
    }

    match /employees/{empId} {
      allow read, write, delete: if signedIn() && isHR(request.auth.uid);
    }
  }
}
